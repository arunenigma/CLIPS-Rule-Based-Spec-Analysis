(deffacts feature-alias-facts
(feature-alias(feature "burst mode")(alias "burst mode")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "passthrough mode")(alias "passthrough mode")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "normal mode")(alias "normal mode")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "checksum")(alias "checksum")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "transaction id")(alias "transaction id")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "transaction type")(alias "transaction type")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "base address")(alias "base address")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "length")(alias "length")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "source")(alias "source")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "destination")(alias "destination")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "read acknowledge")(alias "read acknowledge")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "read request")(alias "read request")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "write acknowledge")(alias "write acknowledge")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "write request")(alias "write request")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "reset_b")(alias "reset_b")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "clk")(alias "clk")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "llrx")(alias "llrx")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "lltx")(alias "lltx")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "ack")(alias "ack")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "wr en")(alias "wr en")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "rd en")(alias "rd en")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "addr")(alias "addr")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "data be")(alias "data be")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "data out")(alias "data out")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "data in")(alias "data in")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "burst mode")(alias "burst mode")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "passthrough mode")(alias "passthrough mode")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "normal mode")(alias "normal mode")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "locallink")(alias "locallink")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "fsm")(alias "fsm")(type "boolean")(dic "mem_ctlr"))
(feature-alias(feature "message block")(alias "message block")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "mds")(alias "mds")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "spn")(alias "spn")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "de-grouping")(alias "de grouping")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "grouping")(alias "grouping")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "d-dimensional array")(alias "d dimensional array")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "output")(alias "output")(type "number")(dic "crypto_jh"))
(feature-alias(feature "input")(alias "input")(type "number")(dic "crypto_jh"))
(feature-alias(feature "permutation layer")(alias "permutation layer")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "linear transformation layer")(alias "linear transformation layer")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "sbox layer")(alias "sbox layer")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "pd_")(alias "pd_")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "_d")(alias "_d")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "pd")(alias "pd")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "mds")(alias "mds")(type "string")(dic "crypto_jh"))
(feature-alias(feature "number")(alias "number")(type "number")(dic "crypto_jh"))
(feature-alias(feature "bit")(alias "bit")(type "set")(dic "crypto_jh"))
(feature-alias(feature "compression function")(alias "compression function")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "bijective function")(alias "bijective function")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "rounding function")(alias "rounding function")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "permutation")(alias "permutation")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "linear transformation")(alias "linear transformation")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "serpent")(alias "serpent")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "bit-slice")(alias "bit slice")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "aes")(alias "aes")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "mds")(alias "mds")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "spn")(alias "spn")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "sboxes")(alias "sboxes")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "jh-512")(alias "jh 512")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "jh-384")(alias "jh 384")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "jh-256")(alias "jh 256")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "jh-224")(alias "jh 224")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "sha-3")(alias "sha 3")(type "bool")(dic "crypto_jh"))
(feature-alias(feature "finalization")(alias "finalization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "compression rounds")(alias "compression rounds")(type "number")(dic "crypto_blake"))
(feature-alias(feature "round function")(alias "round function")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "initilization")(alias "initilization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "new chain")(alias "new chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "counter")(alias "counter")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "salt")(alias "salt")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "message")(alias "message")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "chain")(alias "chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "c15")(alias "c15")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c14")(alias "c14")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c13")(alias "c13")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c12")(alias "c12")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c11")(alias "c11")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c10")(alias "c10")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c9")(alias "c9")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c8")(alias "c8")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c7")(alias "c7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c6")(alias "c6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c5")(alias "c5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c4")(alias "c4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c3")(alias "c3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c2")(alias "c2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c1")(alias "c1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c0")(alias "c0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv7")(alias "iv7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv6")(alias "iv6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv5")(alias "iv5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv4")(alias "iv4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv3")(alias "iv3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv2")(alias "iv2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv1")(alias "iv1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv0")(alias "iv0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "counter value")(alias "counter value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "salt value")(alias "salt value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "message blocks")(alias "message blocks")(type "number")(dic "crypto_blake"))
(feature-alias(feature "chain value")(alias "chain value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "word")(alias "word")(type "number")(dic "crypto_blake"))
(feature-alias(feature "finalization")(alias "finalization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "compression rounds")(alias "compression rounds")(type "number")(dic "crypto_blake"))
(feature-alias(feature "round function")(alias "round function")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "initilization")(alias "initilization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "new chain")(alias "new chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "counter")(alias "counter")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "salt")(alias "salt")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "message")(alias "message")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "chain")(alias "chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "c15")(alias "c15")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c14")(alias "c14")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c13")(alias "c13")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c12")(alias "c12")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c11")(alias "c11")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c10")(alias "c10")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c9")(alias "c9")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c8")(alias "c8")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c7")(alias "c7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c6")(alias "c6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c5")(alias "c5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c4")(alias "c4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c3")(alias "c3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c2")(alias "c2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c1")(alias "c1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c0")(alias "c0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv7")(alias "iv7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv6")(alias "iv6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv5")(alias "iv5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv4")(alias "iv4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv3")(alias "iv3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv2")(alias "iv2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv1")(alias "iv1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv0")(alias "iv0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "counter value")(alias "counter value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "salt value")(alias "salt value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "message blocks")(alias "message blocks")(type "number")(dic "crypto_blake"))
(feature-alias(feature "chain value")(alias "chain value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "word")(alias "word")(type "number")(dic "crypto_blake"))
(feature-alias(feature "finalization")(alias "finalization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "compression rounds")(alias "compression rounds")(type "number")(dic "crypto_blake"))
(feature-alias(feature "round function")(alias "round function")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "initilization")(alias "initilization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "new chain")(alias "new chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "counter")(alias "counter")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "salt")(alias "salt")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "message")(alias "message")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "chain")(alias "chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "c15")(alias "c15")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c14")(alias "c14")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c13")(alias "c13")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c12")(alias "c12")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c11")(alias "c11")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c10")(alias "c10")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c9")(alias "c9")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c8")(alias "c8")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c7")(alias "c7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c6")(alias "c6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c5")(alias "c5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c4")(alias "c4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c3")(alias "c3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c2")(alias "c2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c1")(alias "c1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c0")(alias "c0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv7")(alias "iv7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv6")(alias "iv6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv5")(alias "iv5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv4")(alias "iv4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv3")(alias "iv3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv2")(alias "iv2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv1")(alias "iv1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv0")(alias "iv0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "counter value")(alias "counter value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "salt value")(alias "salt value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "message blocks")(alias "message blocks")(type "number")(dic "crypto_blake"))
(feature-alias(feature "chain value")(alias "chain value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "word")(alias "word")(type "number")(dic "crypto_blake"))
(feature-alias(feature "finalization")(alias "finalization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "compression rounds")(alias "compression rounds")(type "number")(dic "crypto_blake"))
(feature-alias(feature "round function")(alias "round function")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "initilization")(alias "initilization")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "new chain")(alias "new chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "counter")(alias "counter")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "salt")(alias "salt")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "message")(alias "message")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "chain")(alias "chain")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "c15")(alias "c15")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c14")(alias "c14")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c13")(alias "c13")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c12")(alias "c12")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c11")(alias "c11")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c10")(alias "c10")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c9")(alias "c9")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c8")(alias "c8")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c7")(alias "c7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c6")(alias "c6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c5")(alias "c5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c4")(alias "c4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c3")(alias "c3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c2")(alias "c2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c1")(alias "c1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "c0")(alias "c0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv7")(alias "iv7")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv6")(alias "iv6")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv5")(alias "iv5")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv4")(alias "iv4")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv3")(alias "iv3")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv2")(alias "iv2")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv1")(alias "iv1")(type "number")(dic "crypto_blake"))
(feature-alias(feature "iv0")(alias "iv0")(type "number")(dic "crypto_blake"))
(feature-alias(feature "counter value")(alias "counter value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "salt value")(alias "salt value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "message blocks")(alias "message blocks")(type "number")(dic "crypto_blake"))
(feature-alias(feature "chain value")(alias "chain value")(type "number")(dic "crypto_blake"))
(feature-alias(feature "word")(alias "word")(type "number")(dic "crypto_blake"))
(feature-alias(feature "blake-384")(alias "blake 384")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "blake-224")(alias "blake 224")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "blake-512")(alias "blake 512")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "blake-256")(alias "blake 256")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "message length")(alias "message length")(type "number")(dic "crypto_blake"))
(feature-alias(feature "message")(alias "message")(type "set")(dic "crypto_blake"))
(feature-alias(feature "chacha")(alias "chacha")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "lake")(alias "lake")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "haifa")(alias "haifa")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "sha-3")(alias "sha 3")(type "bool")(dic "crypto_blake"))
(feature-alias(feature "soft interrupt")(alias "soft interrupt")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "level triggered")(alias "level triggered")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "edge triggered")(alias "edge triggered")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "interrupt clear")(alias "interrupt clear")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "interrupt set")(alias "interrupt set")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "interrupt enable")(alias "interrupt enable")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "masked interrupt")(alias "masked interrupt")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "raw interrupt")(alias "raw interrupt")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "interrupt acknowledge")(alias "interrupt acknowledge")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "irq")(alias "irq")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "fiq")(alias "fiq")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "priority")(alias "priority")(type "set")(dic "intr_ctlr"))
(feature-alias(feature "vectored")(alias "vectored")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "polling")(alias "polling")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "nesting")(alias "nesting")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "bus interface")(alias "bus interface")(type "set")(dic "intr_ctlr"))
(feature-alias(feature "programmable")(alias "programmable")(type "bool")(dic "intr_ctlr"))
(feature-alias(feature "idim flag")(alias "idim flag")(type "bool")(dic "zpu"))
(feature-alias(feature "zpu interrupt acknowledge")(alias "zpu interrupt acknowledge")(type "bool")(dic "zpu"))
(feature-alias(feature "interrupt vector address")(alias "interrupt vector address")(type "bool")(dic "zpu"))
(feature-alias(feature "idim flag")(alias "idim flag")(type "bool")(dic "zpu"))
(feature-alias(feature "interrupt mask")(alias "interrupt mask")(type "bool")(dic "zpu"))
(feature-alias(feature "memory mapped i/o")(alias "memory mapped i/o")(type "bool")(dic "zpu"))
(feature-alias(feature "edge triggered")(alias "edge triggered")(type "bool")(dic "zpu"))
(feature-alias(feature "neg")(alias "neg")(type "bool")(dic "zpu"))
(feature-alias(feature "neq")(alias "neq")(type "bool")(dic "zpu"))
(feature-alias(feature "eq")(alias "eq")(type "bool")(dic "zpu"))
(feature-alias(feature "callpcrel")(alias "callpcrel")(type "bool")(dic "zpu"))
(feature-alias(feature "call")(alias "call")(type "bool")(dic "zpu"))
(feature-alias(feature "ashiftright")(alias "ashiftright")(type "bool")(dic "zpu"))
(feature-alias(feature "ashiftleft")(alias "ashiftleft")(type "bool")(dic "zpu"))
(feature-alias(feature "lshiftright")(alias "lshiftright")(type "bool")(dic "zpu"))
(feature-alias(feature "mod")(alias "mod")(type "bool")(dic "zpu"))
(feature-alias(feature "div")(alias "div")(type "bool")(dic "zpu"))
(feature-alias(feature "mult")(alias "mult")(type "bool")(dic "zpu"))
(feature-alias(feature "neqbranch")(alias "neqbranch")(type "bool")(dic "zpu"))
(feature-alias(feature "eqbranch")(alias "eqbranch")(type "bool")(dic "zpu"))
(feature-alias(feature "ulessthanprequal")(alias "ulessthanprequal")(type "bool")(dic "zpu"))
(feature-alias(feature "ulessthan")(alias "ulessthan")(type "bool")(dic "zpu"))
(feature-alias(feature "lessthanequal")(alias "lessthanequal")(type "bool")(dic "zpu"))
(feature-alias(feature "lessthan")(alias "lessthan")(type "bool")(dic "zpu"))
(feature-alias(feature "storeh")(alias "storeh")(type "bool")(dic "zpu"))
(feature-alias(feature "loadh")(alias "loadh")(type "bool")(dic "zpu"))
(feature-alias(feature "storeb")(alias "storeb")(type "bool")(dic "zpu"))
(feature-alias(feature "loadb")(alias "loadb")(type "bool")(dic "zpu"))
(feature-alias(feature "xor")(alias "xor")(type "bool")(dic "zpu"))
(feature-alias(feature "sub")(alias "sub")(type "bool")(dic "zpu"))
(feature-alias(feature "poppcrel")(alias "poppcrel")(type "bool")(dic "zpu"))
(feature-alias(feature "pushspadd")(alias "pushspadd")(type "bool")(dic "zpu"))
(feature-alias(feature "nop")(alias "nop")(type "bool")(dic "zpu"))
(feature-alias(feature "flip")(alias "flip")(type "bool")(dic "zpu"))
(feature-alias(feature "not")(alias "not")(type "bool")(dic "zpu"))
(feature-alias(feature "or")(alias "or")(type "bool")(dic "zpu"))
(feature-alias(feature "and")(alias "and")(type "bool")(dic "zpu"))
(feature-alias(feature "add")(alias "add")(type "bool")(dic "zpu"))
(feature-alias(feature "popsp")(alias "popsp")(type "bool")(dic "zpu"))
(feature-alias(feature "pushsp")(alias "pushsp")(type "bool")(dic "zpu"))
(feature-alias(feature "store")(alias "store")(type "bool")(dic "zpu"))
(feature-alias(feature "load")(alias "load")(type "bool")(dic "zpu"))
(feature-alias(feature "poppc")(alias "poppc")(type "bool")(dic "zpu"))
(feature-alias(feature "pushpc")(alias "pushpc")(type "bool")(dic "zpu"))
(feature-alias(feature "emulate")(alias "emulate")(type "bool")(dic "zpu"))
(feature-alias(feature "addsp")(alias "addsp")(type "bool")(dic "zpu"))
(feature-alias(feature "loadsp")(alias "loadsp")(type "bool")(dic "zpu"))
(feature-alias(feature "storesp")(alias "storesp")(type "bool")(dic "zpu"))
(feature-alias(feature "breakpoint")(alias "breakpoint")(type "bool")(dic "zpu"))
(feature-alias(feature "pc")(alias "pc")(type "bool")(dic "zpu"))
(feature-alias(feature "state machine")(alias "state machine")(type "bool")(dic "zpu"))
(feature-alias(feature "execute")(alias "execute")(type "bool")(dic "zpu"))
(feature-alias(feature "decode")(alias "decode")(type "bool")(dic "zpu"))
(feature-alias(feature "fetch")(alias "fetch")(type "bool")(dic "zpu"))
(feature-alias(feature "single port memory interface")(alias "single port memory interface")(type "bool")(dic "zpu"))
(feature-alias(feature "microcode")(alias "microcode")(type "bool")(dic "zpu"))
(feature-alias(feature "interrupt")(alias "interrupt")(type "bool")(dic "zpu"))
(feature-alias(feature "zpu instruction")(alias "zpu instruction")(type "bool")(dic "zpu"))
(feature-alias(feature "zero operand")(alias "zero operand")(type "bool")(dic "zpu"))
(feature-alias(feature "medium sized")(alias "medium sized")(type "bool")(dic "zpu"))
(feature-alias(feature "data cache")(alias "data cache")(type "bool")(dic "zpu"))
(feature-alias(feature "memory transaction latency")(alias "memory transaction latency")(type "num")(dic "zpu"))
(feature-alias(feature "remote data memory")(alias "remote data memory")(type "bool")(dic "zpu"))
(feature-alias(feature "local data memory")(alias "local data memory")(type "bool")(dic "zpu"))
(feature-alias(feature "data memories")(alias "data memories")(type "bool")(dic "zpu"))
(feature-alias(feature "risc processor")(alias "risc processor")(type "bool")(dic "zpu"))
(feature-alias(feature "tuser")(alias "tuser")(type "bool")(dic "axi"))
(feature-alias(feature "tdest")(alias "tdest")(type "bool")(dic "axi"))
(feature-alias(feature "tid")(alias "tid")(type "bool")(dic "axi"))
(feature-alias(feature "tlast")(alias "tlast")(type "bool")(dic "axi"))
(feature-alias(feature "tkeep")(alias "tkeep")(type "bool")(dic "axi"))
(feature-alias(feature "tstrb")(alias "tstrb")(type "bool")(dic "axi"))
(feature-alias(feature "tdata")(alias "tdata")(type "bool")(dic "axi"))
(feature-alias(feature "tready")(alias "tready")(type "bool")(dic "axi"))
(feature-alias(feature "tvalid")(alias "tvalid")(type "bool")(dic "axi"))
(feature-alias(feature "resetn")(alias "resetn")(type "bool")(dic "axi"))
(feature-alias(feature "clk")(alias "clk")(type "bool")(dic "axi"))
(feature-alias(feature "full crossbar")(alias "full crossbar")(type "bool")(dic "axi"))
(feature-alias(feature "buffer requests")(alias "buffer requests")(type "bool")(dic "axi"))
(feature-alias(feature "queue size")(alias "queue size")(type "number")(dic "axi"))
(feature-alias(feature "broadcast")(alias "broadcast")(type "bool")(dic "axi"))
(feature-alias(feature "arbitration")(alias "arbitration")(type "set")(dic "axi"))
(feature-alias(feature "axi bridge")(alias "axi bridge")(type "bool")(dic "axi"))
(feature-alias(feature "tuser trim")(alias "tuser trim")(type "bool")(dic "axi"))
(feature-alias(feature "tuser zero padding")(alias "tuser zero padding")(type "bool")(dic "axi"))
(feature-alias(feature "null byte")(alias "null byte")(type "bool")(dic "axi"))
(feature-alias(feature "multiple data streams")(alias "multiple data streams")(type "bool")(dic "axi"))
(feature-alias(feature "downsizing")(alias "downsizing")(type "bool")(dic "axi"))
(feature-alias(feature "upsizing")(alias "upsizing")(type "bool")(dic "axi"))
(feature-alias(feature "shares wires")(alias "shares wires")(type "bool")(dic "axi"))
(feature-alias(feature "flow control")(alias "flow control")(type "bool")(dic "axi"))
(feature-alias(feature "back pressure")(alias "back pressure")(type "bool")(dic "axi"))
(feature-alias(feature "burst transfers")(alias "burst transfers")(type "bool")(dic "axi"))
(feature-alias(feature "side band signaling")(alias "side band signaling")(type "bool")(dic "axi"))
(feature-alias(feature "parity")(alias "parity")(type "bool")(dic "axi"))
(feature-alias(feature "defined packet length")(alias "defined packet length")(type "bool")(dic "axi"))
(feature-alias(feature "transfer merging")(alias "transfer merging")(type "bool")(dic "axi"))
(feature-alias(feature "transfer interleaving")(alias "transfer interleaving")(type "bool")(dic "axi"))
(feature-alias(feature "packet boundary")(alias "packet boundary")(type "bool")(dic "axi"))
(feature-alias(feature "ordered transfers")(alias "ordered transfers")(type "bool")(dic "axi"))
(feature-alias(feature "interleaving")(alias "interleaving")(type "bool")(dic "axi"))
(feature-alias(feature "data stream")(alias "data stream")(type "bool")(dic "axi"))
(feature-alias(feature "frame")(alias "frame")(type "bool")(dic "axi"))
(feature-alias(feature "packet")(alias "packet")(type "bool")(dic "axi"))
(feature-alias(feature "single transfer")(alias "single transfer")(type "bool")(dic "axi"))
(feature-alias(feature "null byte")(alias "null byte")(type "bool")(dic "axi"))
(feature-alias(feature "position byte")(alias "position byte")(type "bool")(dic "axi"))
(feature-alias(feature "data byte")(alias "data byte")(type "bool")(dic "axi"))
(feature-alias(feature "master")(alias "master")(type "bool")(dic "axi"))
(feature-alias(feature "slave")(alias "slave")(type "bool")(dic "axi"))
(feature-alias(feature "point to point connection")(alias "point to point connection")(type "bool")(dic "axi"))
(feature-alias(feature "signaling")(alias "signaling")(type "bool")(dic "axi"))
(feature-alias(feature "same data width")(alias "same data width")(type "bool")(dic "axi"))
(feature-alias(feature "uni-directional")(alias "uni directional")(type "bool")(dic "axi"))
(feature-alias(feature "direct connection")(alias "direct connection")(type "bool")(dic "axi"))
(feature-alias(feature "interconnect")(alias "interconnect")(type "bool")(dic "axi"))
(feature-alias(feature "data transfer")(alias "data transfer")(type "bool")(dic "axi"))
(feature-alias(feature "master")(alias "master")(type "bool")(dic "axi"))
(feature-alias(feature "axi4 stream protocol")(alias "axi4 stream protocol")(type "bool")(dic "axi"))
(feature-alias(feature "bi-direction")(alias "bi direction")(type "bool")(dic "timer"))
(feature-alias(feature "states")(alias "states")(type "number")(dic "timer"))
(feature-alias(feature "data bits")(alias "data bits")(type "number")(dic "timer"))
(feature-alias(feature "hardware triggered strobe")(alias "hardware triggered strobe")(type "bool")(dic "timer"))
(feature-alias(feature "software triggered strobe")(alias "software triggered strobe")(type "bool")(dic "timer"))
(feature-alias(feature "square wave mode")(alias "square wave mode")(type "bool")(dic "timer"))
(feature-alias(feature "rate generator")(alias "rate generator")(type "bool")(dic "timer"))
(feature-alias(feature "hardware retriggerable one-shot")(alias "hardware retriggerable one shot")(type "bool")(dic "timer"))
(feature-alias(feature "pulse width comparison")(alias "pulse width comparison")(type "bool")(dic "timer"))
(feature-alias(feature "frequency comparison")(alias "frequency comparison")(type "bool")(dic "timer"))
(feature-alias(feature "single-shot")(alias "single shot")(type "bool")(dic "timer"))
(feature-alias(feature "continuous")(alias "continuous")(type "bool")(dic "timer"))
(feature-alias(feature "24-hour clock")(alias "24 hour clock")(type "bool")(dic "timer"))
(feature-alias(feature "alarm")(alias "alarm")(type "bool")(dic "timer"))
(feature-alias(feature "storage temperature")(alias "storage temperature")(type "range")(dic "timer"))
(feature-alias(feature "operating temperature")(alias "operating temperature")(type "range")(dic "timer"))
(feature-alias(feature "input/output voltage")(alias "input/output voltage")(type "range")(dic "timer"))
(feature-alias(feature "supply voltage")(alias "supply voltage")(type "range")(dic "timer"))
(feature-alias(feature "ttl compliant")(alias "ttl compliant")(type "bool")(dic "timer"))
(feature-alias(feature "plcc pid count")(alias "plcc pid count")(type "integer")(dic "timer"))
(feature-alias(feature "plcc package")(alias "plcc package")(type "bool")(dic "timer"))
(feature-alias(feature "cerdip pin count")(alias "cerdip pin count")(type "integer")(dic "timer"))
(feature-alias(feature "cerdip package")(alias "cerdip package")(type "bool")(dic "timer"))
(feature-alias(feature "clock")(alias "clock")(type "set")(dic "timer"))
(feature-alias(feature "clock frequency")(alias "clock frequency")(type "number")(dic "timer"))
(feature-alias(feature "counter latch command")(alias "counter latch command")(type "bool")(dic "timer"))
(feature-alias(feature "read-back command")(alias "read back command")(type "bool")(dic "timer"))
(feature-alias(feature "modes")(alias "modes")(type "integer")(dic "timer"))
(feature-alias(feature "count down")(alias "count down")(type "bool")(dic "timer"))
(feature-alias(feature "count up")(alias "count up")(type "bool")(dic "timer"))
(feature-alias(feature "bcd counting")(alias "bcd counting")(type "bool")(dic "timer"))
(feature-alias(feature "binary counting")(alias "binary counting")(type "bool")(dic "timer"))
(feature-alias(feature "amba apb interface")(alias "amba apb interface")(type "bool")(dic "timer"))
(feature-alias(feature "plb interface")(alias "plb interface")(type "bool")(dic "timer"))
(feature-alias(feature "32bit counters")(alias "32bit counters")(type "integer")(dic "timer"))
(feature-alias(feature "16bit counters")(alias "16bit counters")(type "integer")(dic "timer"))
(feature-alias(feature "status")(alias "status")(type "bool")(dic "uart"))
(feature-alias(feature "prescaler division")(alias "prescaler division")(type "bool")(dic "uart"))
(feature-alias(feature "divisor latch")(alias "divisor latch")(type "bool")(dic "uart"))
(feature-alias(feature "scratch")(alias "scratch")(type "bool")(dic "uart"))
(feature-alias(feature "modem status")(alias "modem status")(type "bool")(dic "uart"))
(feature-alias(feature "line status")(alias "line status")(type "bool")(dic "uart"))
(feature-alias(feature "modem control")(alias "modem control")(type "bool")(dic "uart"))
(feature-alias(feature "line control")(alias "line control")(type "bool")(dic "uart"))
(feature-alias(feature "fifo control")(alias "fifo control")(type "bool")(dic "uart"))
(feature-alias(feature "interrupt identification")(alias "interrupt identification")(type "bool")(dic "uart"))
(feature-alias(feature "interrupt status")(alias "interrupt status")(type "bool")(dic "uart"))
(feature-alias(feature "interrupt enable")(alias "interrupt enable")(type "bool")(dic "uart"))
(feature-alias(feature "transmitter holding")(alias "transmitter holding")(type "bool")(dic "uart"))
(feature-alias(feature "receiver holding")(alias "receiver holding")(type "bool")(dic "uart"))
(feature-alias(feature "parity")(alias "parity")(type "bool")(dic "uart"))
(feature-alias(feature "break")(alias "break")(type "bool")(dic "uart"))
(feature-alias(feature "frame")(alias "frame")(type "bool")(dic "uart"))
(feature-alias(feature "overrun")(alias "overrun")(type "bool")(dic "uart"))
(feature-alias(feature "enable")(alias "enable")(type "bool")(dic "uart"))
(feature-alias(feature "implemented")(alias "implemented")(type "bool")(dic "uart"))
(feature-alias(feature "pre-scaler division")(alias "pre scaler division")(type "bool")(dic "uart"))
(feature-alias(feature "divisor latch")(alias "divisor latch")(type "bool")(dic "uart"))
(feature-alias(feature "status")(alias "status")(type "bool")(dic "uart"))
(feature-alias(feature "ready")(alias "ready")(type "bool")(dic "uart"))
(feature-alias(feature "overflow")(alias "overflow")(type "bool")(dic "uart"))
(feature-alias(feature "clear to send")(alias "clear to send")(type "bool")(dic "uart"))
(feature-alias(feature "bus width")(alias "bus width")(type "bool")(dic "uart"))
(feature-alias(feature "fifo")(alias "fifo")(type "bool")(dic "uart"))
(feature-alias(feature "interrupt")(alias "interrupt")(type "bool")(dic "uart"))
(feature-alias(feature "reject")(alias "reject")(type "bool")(dic "uart"))
(feature-alias(feature "buffer size")(alias "buffer size")(type "number")(dic "uart"))
(feature-alias(feature "buffering")(alias "buffering")(type "set")(dic "uart"))
(feature-alias(feature "resynchronize")(alias "resynchronize")(type "set")(dic "uart"))
(feature-alias(feature "cycles per bit")(alias "cycles per bit")(type "number")(dic "uart"))
(feature-alias(feature "samples per bit")(alias "samples per bit")(type "number")(dic "uart"))
(feature-alias(feature "rate")(alias "rate")(type "number")(dic "uart"))
(feature-alias(feature "start bit")(alias "start bit")(type "bool")(dic "uart"))
(feature-alias(feature "buffer size")(alias "buffer size")(type "number")(dic "uart"))
(feature-alias(feature "buffering")(alias "buffering")(type "bool")(dic "uart"))
(feature-alias(feature "interrupt")(alias "interrupt")(type "bool")(dic "uart"))
(feature-alias(feature "stop bits")(alias "stop bits")(type "number")(dic "uart"))
(feature-alias(feature "parity")(alias "parity")(type "bool")(dic "uart"))
(feature-alias(feature "data bits")(alias "data bits")(type "number")(dic "uart"))
(feature-alias(feature "serialization")(alias "serialization")(type "bool")(dic "uart"))
(feature-alias(feature "bi-sync")(alias "bi sync")(type "bool")(dic "uart"))
(feature-alias(feature "flow control")(alias "flow control")(type "bool")(dic "uart"))
(feature-alias(feature "receive buffer")(alias "receive buffer")(type "bool")(dic "uart"))
(feature-alias(feature "transmit buffer")(alias "transmit buffer")(type "bool")(dic "uart"))
(feature-alias(feature "fifo size")(alias "fifo size")(type "number")(dic "uart"))
(feature-alias(feature "fifo")(alias "fifo")(type "bool")(dic "uart"))
(feature-alias(feature "dma interface")(alias "dma interface")(type "bool")(dic "uart"))
(feature-alias(feature "carrier detect")(alias "carrier detect")(type "bool")(dic "uart"))
(feature-alias(feature "clear to send")(alias "clear to send")(type "bool")(dic "uart"))
(feature-alias(feature "reset")(alias "reset")(type "bool")(dic "uart"))
(feature-alias(feature "receiver")(alias "receiver")(type "bool")(dic "uart"))
(feature-alias(feature "transmitter")(alias "transmitter")(type "bool")(dic "uart"))
(feature-alias(feature "serial interface")(alias "serial interface")(type "bool")(dic "uart"))
(feature-alias(feature "baud rate generator")(alias "baud rate generator")(type "bool")(dic "uart"))
(feature-alias(feature "interrupt controller")(alias "interrupt controller")(type "bool")(dic "uart"))
(feature-alias(feature "programmable")(alias "programmable")(type "bool")(dic "uart"))
(feature-alias(feature "divisor latch")(alias "divisor latch")(type "bool")(dic "uart"))
(feature-alias(feature "status register")(alias "status register")(type "bool")(dic "uart"))
(feature-alias(feature "control register")(alias "control register")(type "bool")(dic "uart"))
(feature-alias(feature "shift register")(alias "shift register")(type "bool")(dic "uart"))
(feature-alias(feature "output register")(alias "output register")(type "bool")(dic "uart"))
(feature-alias(feature "input register")(alias "input register")(type "bool")(dic "uart"))
(feature-alias(feature "character")(alias "character")(type "bool")(dic "uart"))
(feature-alias(feature "clear to send")(alias "clear to send")(type "bool")(dic "uart"))
(feature-alias(feature "signal inversion")(alias "signal inversion")(type "bool")(dic "uart"))
(feature-alias(feature "duplex")(alias "duplex")(type "bool")(dic "uart"))
(feature-alias(feature "simplex")(alias "simplex")(type "bool")(dic "uart"))
(feature-alias(feature "line break")(alias "line break")(type "bool")(dic "uart"))
(feature-alias(feature "handshaking")(alias "handshaking")(type "set")(dic "uart"))
(feature-alias(feature "transfer rate maximum")(alias "transfer rate maximum")(type "number")(dic "uart"))
(feature-alias(feature "transfer rate minimum")(alias "transfer rate minimum")(type "number")(dic "uart"))
(feature-alias(feature "parity")(alias "parity")(type "set")(dic "uart"))
(feature-alias(feature "stop bits")(alias "stop bits")(type "number")(dic "uart"))
(feature-alias(feature "data bits")(alias "data bits")(type "number")(dic "uart"))
(feature-alias(feature "compliance")(alias "compliance")(type "set")(dic "uart"))
(feature-alias(feature "zero detect")(alias "zero detect")(type "bool")(dic "arm"))
(feature-alias(feature "full adder")(alias "full adder")(type "bool")(dic "arm"))
(feature-alias(feature "zero extend")(alias "zero extend")(type "bool")(dic "arm"))
(feature-alias(feature "xor")(alias "xor")(type "bool")(dic "arm"))
(feature-alias(feature "or")(alias "or")(type "bool")(dic "arm"))
(feature-alias(feature "and")(alias "and")(type "bool")(dic "arm"))
(feature-alias(feature "fiq register set")(alias "fiq register set")(type "bool")(dic "arm"))
(feature-alias(feature "irq register set")(alias "irq register set")(type "bool")(dic "arm"))
(feature-alias(feature "user register set")(alias "user register set")(type "bool")(dic "arm"))
(feature-alias(feature "supervisor register set")(alias "supervisor register set")(type "bool")(dic "arm"))
(feature-alias(feature "algorithm")(alias "algorithm")(type "set")(dic "arm"))
(feature-alias(feature "clock cycles")(alias "clock cycles")(type "number")(dic "arm"))
(feature-alias(feature "next fetch address generation")(alias "next fetch address generation")(type "bool")(dic "arm"))
(feature-alias(feature "alu")(alias "alu")(type "bool")(dic "arm"))
(feature-alias(feature "register bank")(alias "register bank")(type "bool")(dic "arm"))
(feature-alias(feature "multiply")(alias "multiply")(type "bool")(dic "arm"))
(feature-alias(feature "barallel shifter")(alias "barallel shifter")(type "bool")(dic "arm"))
(feature-alias(feature "interrupt handling")(alias "interrupt handling")(type "bool")(dic "arm"))
(feature-alias(feature "multi-cycle instructions")(alias "multi cycle instructions")(type "bool")(dic "arm"))
(feature-alias(feature "decode state machine")(alias "decode state machine")(type "bool")(dic "arm"))
(feature-alias(feature "register instruction")(alias "register instruction")(type "bool")(dic "arm"))
(feature-alias(feature "instruction decode")(alias "instruction decode")(type "bool")(dic "arm"))
(feature-alias(feature "each cache way kb")(alias "each cache way kb")(type "number")(dic "arm"))
(feature-alias(feature "cache line words")(alias "cache line words")(type "number")(dic "arm"))
(feature-alias(feature "cache lines")(alias "cache lines")(type "number")(dic "arm"))
(feature-alias(feature "8 way cache")(alias "8 way cache")(type "bool")(dic "arm"))
(feature-alias(feature "4 way cache")(alias "4 way cache")(type "bool")(dic "arm"))
(feature-alias(feature "3 way cache")(alias "3 way cache")(type "bool")(dic "arm"))
(feature-alias(feature "2 way cache")(alias "2 way cache")(type "bool")(dic "arm"))
(feature-alias(feature "read-miss replacement policy")(alias "read miss replacement policy")(type "bool")(dic "arm"))
(feature-alias(feature "write through policy")(alias "write through policy")(type "bool")(dic "arm"))
(feature-alias(feature "cache data sram")(alias "cache data sram")(type "bool")(dic "arm"))
(feature-alias(feature "cache tag sram")(alias "cache tag sram")(type "bool")(dic "arm"))
(feature-alias(feature "address compared to cache tag sram")(alias "address compared to cache tag sram")(type "bool")(dic "arm"))
(feature-alias(feature "instruction prefetch")(alias "instruction prefetch")(type "bool")(dic "arm"))
(feature-alias(feature "cache state machine")(alias "cache state machine")(type "bool")(dic "arm"))
(feature-alias(feature "fiq")(alias "fiq")(type "bool")(dic "arm"))
(feature-alias(feature "irq")(alias "irq")(type "bool")(dic "arm"))
(feature-alias(feature "address exception")(alias "address exception")(type "bool")(dic "arm"))
(feature-alias(feature "data abort")(alias "data abort")(type "bool")(dic "arm"))
(feature-alias(feature "prefetch abort")(alias "prefetch abort")(type "bool")(dic "arm"))
(feature-alias(feature "software interrupt")(alias "software interrupt")(type "bool")(dic "arm"))
(feature-alias(feature "undefined instruction")(alias "undefined instruction")(type "boo")(dic "arm"))
(feature-alias(feature "system")(alias "system")(type "bool")(dic "arm"))
(feature-alias(feature "undefined")(alias "undefined")(type "bool")(dic "arm"))
(feature-alias(feature "abort")(alias "abort")(type "bool")(dic "arm"))
(feature-alias(feature "supervisor")(alias "supervisor")(type "bool")(dic "arm"))
(feature-alias(feature "irq")(alias "irq")(type "bool")(dic "arm"))
(feature-alias(feature "fiq")(alias "fiq")(type "bool")(dic "arm"))
(feature-alias(feature "user")(alias "user")(type "bool")(dic "arm"))
(feature-alias(feature "rrx")(alias "rrx")(type "bool")(dic "arm"))
(feature-alias(feature "ror")(alias "ror")(type "bool")(dic "arm"))
(feature-alias(feature "asr")(alias "asr")(type "bool")(dic "arm"))
(feature-alias(feature "lsr")(alias "lsr")(type "bool")(dic "arm"))
(feature-alias(feature "lsl")(alias "lsl")(type "bool")(dic "arm"))
(feature-alias(feature "al")(alias "al")(type "bool")(dic "arm"))
(feature-alias(feature "le")(alias "le")(type "bool")(dic "arm"))
(feature-alias(feature "gt")(alias "gt")(type "bool")(dic "arm"))
(feature-alias(feature "lt")(alias "lt")(type "bool")(dic "arm"))
(feature-alias(feature "ge")(alias "ge")(type "bool")(dic "arm"))
(feature-alias(feature "ls")(alias "ls")(type "bool")(dic "arm"))
(feature-alias(feature "hi")(alias "hi")(type "bool")(dic "arm"))
(feature-alias(feature "vc")(alias "vc")(type "bool")(dic "arm"))
(feature-alias(feature "vs")(alias "vs")(type "bool")(dic "arm"))
(feature-alias(feature "pl")(alias "pl")(type "bool")(dic "arm"))
(feature-alias(feature "mi")(alias "mi")(type "bool")(dic "arm"))
(feature-alias(feature "cc")(alias "cc")(type "bool")(dic "arm"))
(feature-alias(feature "cs")(alias "cs")(type "bool")(dic "arm"))
(feature-alias(feature "ne")(alias "ne")(type "bool")(dic "arm"))
(feature-alias(feature "eq")(alias "eq")(type "bool")(dic "arm"))
(feature-alias(feature "tst")(alias "tst")(type "bool")(dic "arm"))
(feature-alias(feature "teq")(alias "teq")(type "bool")(dic "arm"))
(feature-alias(feature "swpb")(alias "swpb")(type "bool")(dic "arm"))
(feature-alias(feature "swp")(alias "swp")(type "bool")(dic "arm"))
(feature-alias(feature "swi")(alias "swi")(type "bool")(dic "arm"))
(feature-alias(feature "sub")(alias "sub")(type "bool")(dic "arm"))
(feature-alias(feature "strb")(alias "strb")(type "bool")(dic "arm"))
(feature-alias(feature "str")(alias "str")(type "bool")(dic "arm"))
(feature-alias(feature "stm")(alias "stm")(type "bool")(dic "arm"))
(feature-alias(feature "stc")(alias "stc")(type "bool")(dic "arm"))
(feature-alias(feature "sbc")(alias "sbc")(type "bool")(dic "arm"))
(feature-alias(feature "rsc")(alias "rsc")(type "bool")(dic "arm"))
(feature-alias(feature "rsb")(alias "rsb")(type "bool")(dic "arm"))
(feature-alias(feature "orr")(alias "orr")(type "bool")(dic "arm"))
(feature-alias(feature "mvn")(alias "mvn")(type "bool")(dic "arm"))
(feature-alias(feature "mul")(alias "mul")(type "bool")(dic "arm"))
(feature-alias(feature "mrc")(alias "mrc")(type "bool")(dic "arm"))
(feature-alias(feature "mov")(alias "mov")(type "bool")(dic "arm"))
(feature-alias(feature "mla")(alias "mla")(type "bool")(dic "arm"))
(feature-alias(feature "mcr")(alias "mcr")(type "bool")(dic "arm"))
(feature-alias(feature "ldrb")(alias "ldrb")(type "bool")(dic "arm"))
(feature-alias(feature "ldr")(alias "ldr")(type "bool")(dic "arm"))
(feature-alias(feature "ldm")(alias "ldm")(type "bool")(dic "arm"))
(feature-alias(feature "ldc")(alias "ldc")(type "bool")(dic "arm"))
(feature-alias(feature "eor")(alias "eor")(type "bool")(dic "arm"))
(feature-alias(feature "cmp")(alias "cmp")(type "bool")(dic "arm"))
(feature-alias(feature "cmn")(alias "cmn")(type "bool")(dic "arm"))
(feature-alias(feature "cdp")(alias "cdp")(type "bool")(dic "arm"))
(feature-alias(feature "bl")(alias "bl")(type "bool")(dic "arm"))
(feature-alias(feature "bic")(alias "bic")(type "bool")(dic "arm"))
(feature-alias(feature "b")(alias "b")(type "bool")(dic "arm"))
(feature-alias(feature "and")(alias "and")(type "bool")(dic "arm"))
(feature-alias(feature "add")(alias "add")(type "bool")(dic "arm"))
(feature-alias(feature "adc")(alias "adc")(type "bool")(dic "arm"))
(feature-alias(feature "long multiply")(alias "long multiply")(type "bool")(dic "arm"))
(feature-alias(feature "spsr")(alias "spsr")(type "bool")(dic "arm"))
(feature-alias(feature "cpsr")(alias "cpsr")(type "bool")(dic "arm"))
(feature-alias(feature "address space")(alias "address space")(type "set")(dic "arm"))
(feature-alias(feature "27 registers")(alias "27 registers")(type "bool")(dic "arm"))
(feature-alias(feature "register bank")(alias "register bank")(type "bool")(dic "arm"))
(feature-alias(feature "program counter")(alias "program counter")(type "bool")(dic "arm"))
(feature-alias(feature "program status word")(alias "program status word")(type "bool")(dic "arm"))
(feature-alias(feature "user mode")(alias "user mode")(type "bool")(dic "arm"))
(feature-alias(feature "supervisor mode")(alias "supervisor mode")(type "bool")(dic "arm"))
(feature-alias(feature "exception")(alias "exception")(type "bool")(dic "arm"))
(feature-alias(feature "write back")(alias "write back")(type "bool")(dic "arm"))
(feature-alias(feature "memory access")(alias "memory access")(type "bool")(dic "arm"))
(feature-alias(feature "execute")(alias "execute")(type "bool")(dic "arm"))
(feature-alias(feature "decode")(alias "decode")(type "bool")(dic "arm"))
(feature-alias(feature "fetch")(alias "fetch")(type "bool")(dic "arm"))
(feature-alias(feature "pipeline stall")(alias "pipeline stall")(type "bool")(dic "arm"))
(feature-alias(feature "pipeline stages")(alias "pipeline stages")(type "set")(dic "arm"))
(feature-alias(feature "endianess")(alias "endianess")(type "set")(dic "arm"))
(feature-alias(feature "mmu")(alias "mmu")(type "bool")(dic "arm"))
(feature-alias(feature "coprocessor 15 interface")(alias "coprocessor 15 interface")(type "bool")(dic "arm"))
(feature-alias(feature "system bus width")(alias "system bus width")(type "set")(dic "arm"))
(feature-alias(feature "bus interface")(alias "bus interface")(type "set")(dic "arm"))
(feature-alias(feature "32 bit core")(alias "32 bit core")(type "bool")(dic "arm"))
(feature-alias(feature "unified instruction data cache")(alias "unified instruction data cache")(type "bool")(dic "arm"))
(feature-alias(feature "data cache")(alias "data cache")(type "bool")(dic "arm"))
(feature-alias(feature "instruction cache")(alias "instruction cache")(type "bool")(dic "arm"))
(feature-alias(feature "v2a isa")(alias "v2a isa")(type "bool")(dic "arm"))
(feature-alias(feature "risc processor")(alias "risc processor")(type "bool")(dic "arm"))
)
